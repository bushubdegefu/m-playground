basePath: /api/v1
definitions:
  common.ResponseHTTP:
    properties:
      data: {}
      details:
        type: string
      success:
        type: boolean
    type: object
  common.ResponsePagination:
    properties:
      data: {}
      details:
        type: string
      page:
        type: integer
      pages:
        type: integer
      size:
        type: integer
      success:
        type: boolean
      total:
        type: integer
    type: object
  models.GroupGet:
    description: GroupGet type information
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      permission_ids:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    type: object
  models.GroupPatch:
    description: GroupPatch type information
    properties:
      name:
        type: string
    type: object
  models.GroupPost:
    description: GroupPost type information
    properties:
      name:
        type: string
    type: object
  models.PermissionGet:
    description: PermissionGet type information
    properties:
      codename:
        type: string
      createdAt:
        type: string
      id:
        type: string
      updatedAt:
        type: string
    type: object
  models.PermissionPatch:
    description: PermissionPatch type information
    properties:
      name:
        type: string
    type: object
  models.PermissionPost:
    description: PermissionPost type information
    properties:
      name:
        type: string
    type: object
  models.UserGet:
    description: UserGet type information
    properties:
      createdAt:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_staff:
        type: boolean
      is_superuser:
        type: boolean
      last_login:
        type: string
      last_name:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  models.UserPatch:
    description: UserPatch type information
    properties:
      email:
        type: string
      first_name:
        type: string
      is_active:
        type: boolean
      is_staff:
        type: boolean
      is_superuser:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.UserPost:
    description: UserPost type information
    properties:
      email:
        type: string
      first_name:
        type: string
      is_active:
        type: boolean
      is_staff:
        type: boolean
      is_superuser:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is django-auth API OPENAPI Documentation.
  termsOfService: http://swagger.io/terms/
  title: Swagger django-auth API
  version: "0.1"
paths:
  /django_auth/group:
    get:
      consumes:
      - application/json
      description: Get Groups
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: size
        required: true
        type: integer
      - description: Search by name optional field string
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponsePagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.GroupGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      - Refresh: []
      summary: Get Groups
      tags:
      - Groups
    post:
      consumes:
      - application/json
      description: Add Group
      parameters:
      - description: Add Group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.GroupPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.GroupPost'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Add a new Group
      tags:
      - Groups
  /django_auth/group/{group_id}:
    delete:
      consumes:
      - application/json
      description: Remove group by ID
      parameters:
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Remove Group by ID
      tags:
      - Groups
    get:
      consumes:
      - application/json
      description: Get group by ID
      parameters:
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.GroupGet'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get Group by ID
      tags:
      - Groups
    patch:
      consumes:
      - application/json
      description: Patch Group
      parameters:
      - description: Patch Group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.GroupPatch'
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.GroupPatch'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Patch Group
      tags:
      - Groups
  /django_auth/groupcomplementuser/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Group User Not Complement
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.GroupGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User to Group Not Complement
      tags:
      - GroupUsers
  /django_auth/groupnoncomplementuser/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Group User Complement
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.GroupGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User to Group Complement
      tags:
      - GroupUsers
  /django_auth/grouppermission/{group_id}:
    get:
      consumes:
      - application/json
      description: Get Permission Group
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: size
        required: true
        type: integer
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponsePagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get Group to Permission
      tags:
      - PermissionGroups
  /django_auth/grouppermission/{permission_id}/{group_id}:
    delete:
      consumes:
      - application/json
      description: Delete Permission Group
      parameters:
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.GroupPost'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Delete Permission
      tags:
      - PermissionGroups
    post:
      consumes:
      - application/json
      description: Add Permission Group
      parameters:
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Add Group to Permission
      tags:
      - PermissionGroups
  /django_auth/permission:
    get:
      consumes:
      - application/json
      description: Get Permissions
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: size
        required: true
        type: integer
      - description: Search by name optional field string
        in: query
        name: name
        type: string
      - description: Search by codename optional field string
        in: query
        name: codename
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponsePagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      - Refresh: []
      summary: Get Permissions
      tags:
      - Permissions
    post:
      consumes:
      - application/json
      description: Add Permission
      parameters:
      - description: Add Permission
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/models.PermissionPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.PermissionPost'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Add a new Permission
      tags:
      - Permissions
  /django_auth/permission/{permission_id}:
    delete:
      consumes:
      - application/json
      description: Remove permission by ID
      parameters:
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Remove Permission by ID
      tags:
      - Permissions
    get:
      consumes:
      - application/json
      description: Get permission by ID
      parameters:
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.PermissionGet'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get Permission by ID
      tags:
      - Permissions
    patch:
      consumes:
      - application/json
      description: Patch Permission
      parameters:
      - description: Patch Permission
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/models.PermissionPatch'
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.PermissionPatch'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Patch Permission
      tags:
      - Permissions
  /django_auth/permissioncomplementgroup/{group_id}:
    get:
      consumes:
      - application/json
      description: Get Permission Group Not Complement
      parameters:
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get Group to Permission Not Complement
      tags:
      - PermissionGroups
  /django_auth/permissioncomplementuser/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Permission User Not Complement
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User to Permission Not Complement
      tags:
      - PermissionUsers
  /django_auth/permissionnoncomplementgroup/{group_id}:
    get:
      consumes:
      - application/json
      description: Get Permission Group Complement
      parameters:
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get Group to Permission Complement
      tags:
      - PermissionGroups
  /django_auth/permissionnoncomplementuser/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Permission User Complement
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User to Permission Complement
      tags:
      - PermissionUsers
  /django_auth/user:
    get:
      consumes:
      - application/json
      description: Get Users
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: size
        required: true
        type: integer
      - description: Search by username optional field string
        in: query
        name: username
        type: string
      - description: Search by email optional field string
        in: query
        name: email
        type: string
      - description: Search by first_name optional field string
        in: query
        name: first_name
        type: string
      - description: Search by last_name optional field string
        in: query
        name: last_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponsePagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.UserGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      - Refresh: []
      summary: Get Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Add User
      parameters:
      - description: Add User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.UserPost'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Add a new User
      tags:
      - Users
  /django_auth/user/{user_id}:
    delete:
      consumes:
      - application/json
      description: Remove user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Remove User by ID
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.UserGet'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User by ID
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Patch User
      parameters:
      - description: Patch User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserPatch'
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.UserPatch'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Patch User
      tags:
      - Users
  /django_auth/usergroup/{group_id}/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete Group User
      parameters:
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.UserPost'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Delete Group
      tags:
      - GroupUsers
    post:
      consumes:
      - application/json
      description: Add Group User
      parameters:
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Add User to Group
      tags:
      - GroupUsers
  /django_auth/usergroup/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Group User
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: size
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponsePagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.GroupGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User to Group
      tags:
      - GroupUsers
  /django_auth/userpermission/{permission_id}/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete Permission User
      parameters:
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.UserPost'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Delete Permission
      tags:
      - PermissionUsers
    post:
      consumes:
      - application/json
      description: Add Permission User
      parameters:
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Add User to Permission
      tags:
      - PermissionUsers
  /django_auth/userpermission/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Permission User
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: size
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponsePagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PermissionGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get User to Permission
      tags:
      - PermissionUsers
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: X-APP-TOKEN
    type: apiKey
  Refresh:
    description: Description for what is this security definition being used
    in: header
    name: X-REFRESH-TOKEN
    type: apiKey
swagger: "2.0"
